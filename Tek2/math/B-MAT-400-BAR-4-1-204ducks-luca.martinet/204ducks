#!/usr/bin/env python3

import sys
import math

def print_help():
    print("USAGE\n\t./204ducks a\n\nDESCRIPTION\n\ta\tconstant")

def calculate_probability(a, t, mode=0):
    term1 = a * math.exp(-t)
    term2 = (4 - 3 * a) * math.exp(-2 * t)
    term3 = (2 * a - 4) * math.exp(-4 * t)

    if mode == 0:
        return -term1 - term2 / 2 - term3 / 4
    else:
        return term1 + term2 + term3

def calculate_average_return_time(a):
    result = 0.0
    t = 0.0
    while t < 10:
        result += calculate_probability(a, t, 1) * t / 1000
        t += 0.001
    return result

def calculate_standard_deviation(a, average_time):
    result = 0.0
    t = 0.0
    while t < 100:
        result += pow(t - average_time, 2) * calculate_probability(a, t, 1) / 1000
        t += 0.001
    return math.sqrt(result)

def calculate_return_time_for_percentage(a, percent):
    t = 0.0
    while t < 1000:
        if calculate_probability(a, t / 60) - calculate_probability(a, 0) >= percent:
            return t
        t += 0.002
    raise ValueError("Too far")

def print_result(a):
    if a is None:
        raise ValueError("invalid number (0 <= a <= 2.5)")
    average_time = calculate_average_return_time(a)
    standard_deviation = calculate_standard_deviation(a, average_time)
    time_50_percent = calculate_return_time_for_percentage(a, 0.5)
    time_99_percent = calculate_return_time_for_percentage(a, 0.99)
    duck_1_percent = (calculate_probability(a, 1) - calculate_probability(a, 0)) * 100
    duck_2_percent = (calculate_probability(a, 2) - calculate_probability(a, 0)) * 100
    print(f"Average return time: {int(average_time)}m {math.ceil((average_time - int(average_time)) * 60):02}s")
    print(f"Standard deviation: {standard_deviation:.3f}")
    print(f"Time after which 50% of the ducks are back: {int(time_50_percent / 60)}m {int(time_50_percent % 60):02}s")
    print(f"Time after which 99% of the ducks are back: {int(time_99_percent / 60)}m {int(time_99_percent % 60):02}s")
    print(f"Percentage of ducks back after 1 minute: {duck_1_percent:.1f}%")
    print(f"Percentage of ducks back after 2 minutes: {duck_2_percent:.1f}%")

def main():
    if len(sys.argv) != 2:
        print("Error: Invalid number of arguments", file=sys.stderr)
        sys.exit(84)
    if sys.argv[1] == "-h":
        print_help()
        return
    try:
        a = float(sys.argv[1])
    except ValueError:
        print("Error: Argument must be a number", file=sys.stderr)
        sys.exit(84)

    if not 0 <= a <= 2.5:
        print("Error: Argument must be between 0 and 2.5", file=sys.stderr)
        sys.exit(84)
    print_result(a)

if __name__ == "__main__":
    main()
